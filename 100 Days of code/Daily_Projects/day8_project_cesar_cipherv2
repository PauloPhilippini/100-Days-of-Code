alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']

logo = '''
 ## ##     ####   ### ###  ### ##     ##     
##   ##     ##     ##  ##   ##  ##     ##    
##          ##     ##       ##  ##   ## ##   
##          ##     ## ##    ## ##    ##  ##  
##          ##     ##       ## ##    ## ###  
##   ##     ##     ##       ##  ##   ##  ##  
 ## ##     ####   ####     #### ##  ###  ##  

### ##   ### ###  
 ##  ##   ##  ##  
 ##  ##   ##      
 ##  ##   ## ##   
 ##  ##   ##      
 ##  ##   ##  ##  
### ##   ### ###  

 ## ##   ### ###   ## ##     ##     ### ##   
##   ##   ##  ##  ##   ##     ##     ##  ##  
##        ##      ####      ## ##    ##  ##  
##        ## ##    #####    ##  ##   ## ##   
##        ##          ###   ## ###   ## ##   
##   ##   ##  ##  ##   ##   ##  ##   ##  ##  
 ## ##   ### ###   ## ##   ###  ##  #### ##

'''

#independente da opção, o for sempre será executado
def caesar(start_text, shift_amount, cipher_direction):
  end_text = ""
  if cipher_direction == "decodificar":
      shift_amount *= -1
  for char in start_text:
      if char in alphabet:
          position = alphabet.index(char)
          new_position = position + shift_amount
          end_text += alphabet[new_position]
      else:
          end_text += char
  if cipher_direction == "codificar":
    print(f"A mensagem cifrada é: {end_text}")
  else:
    print(f'A mensagem decodificada é: {end_text}')
print(logo)

should_end = False
while not should_end:

  direction = input("Digite 'codificar' para cifrar a mensagem ou 'decodificar' para encriptar:\n").lower()
  text = input("Digite sua mensagem:\n").lower()
  shift = int(input("Número de cifras:\n"))
  
  shift = shift % 26

  caesar(start_text=text, shift_amount=shift, cipher_direction=direction)

  restart = input("Digite 'sim' para outra mensagem. Caso contrário digite 'não'.\n").lower()
  if restart == "não":
    should_end = True
    print("Encerrando")


